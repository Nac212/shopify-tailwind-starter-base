{% doc %}
  @prompt
    Create a scrollable product carousel section for a Shopify page.
    
    The section should have a customizable heading (e.g., "TRENDING PIECES") with a customizable font and color. The heading font must default to 'Bebas Neue'.
    
    The carousel should display a maximum of four product cards at a time on desktop and be fully scrollable on all devices. Include a dot or line-based pagination system below the product cards to indicate progress through the carousel. This scrolling widget visual must be present on both desktop and mobile views.
    
    The product cards should have a customizable amount of white space between them. Each card should display the product image, title, and price. The product title and price fonts must default to 'Poppins'. The regular price should default to black. If there is a sale price, the regular price must be crossed out and displayed on the left side, with the sale price on the right side in red. A small, customizable "ON SALE" badge should be displayed on the product image.
    
    The section should include settings for a store owner to:
    
    Choose a specific collection to pull products from.
    
    Alternatively, manually select individual products to display. Ensure this functionality is fully working and reliable.
    
    Customize the font, size, and centering of the section heading.
    
    Customize the font, size, and centering of BOTH product titles and prices.
    
    Customize the amount of white space between the product cards.
    
    Ensure the section is fully responsive. On mobile, the layout must display two full columns with a third column partially visible on the right, indicating to the user that they can scroll to see more products. The functionality and visual appearance must be consistent across all devices., there is no heading displaying. 
    The collection feature does not work, and the manual product selection doesn't work either.
    
    these both need to be functional, the heading is still not being displayed, and the collection selection doesnt work. Please fix this to showcase colelctions and display a heading.

{% enddoc %}
{% assign ai_gen_id = section.id | replace: '_', '' | downcase %}

{% style %}
  .ai-product-carousel-{{ ai_gen_id }} {
    padding: 40px 0;
    overflow: hidden;
  }

  .ai-product-carousel__container-{{ ai_gen_id }} {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .ai-product-carousel__heading-{{ ai_gen_id }} {
    font-family: {{ section.settings.heading_font.family }}, {{ section.settings.heading_font.fallback_families }};
    font-weight: {{ section.settings.heading_font.weight }};
    font-style: {{ section.settings.heading_font.style }};
    font-size: {{ section.settings.heading_size }}px;
    color: {{ section.settings.heading_color }};
    margin: 0 0 40px 0;
    text-align: {{ section.settings.heading_alignment }};
    display: block;
  }

  .ai-product-carousel__wrapper-{{ ai_gen_id }} {
    position: relative;}

  .ai-product-carousel__track-{{ ai_gen_id }} {
    display: flex;
    gap: {{ section.settings.card_spacing }}px;
    overflow-x: auto;
    scroll-behavior: smooth;
    scrollbar-width: none;
    -ms-overflow-style: none;
    padding-bottom: 10px;
  }

  .ai-product-carousel__track-{{ ai_gen_id }}::-webkit-scrollbar {
    display: none;
  }

  .ai-product-carousel__card-{{ ai_gen_id }} {
    flex: 0 0 calc((100% - ({{ section.settings.card_spacing }}px * 3)) / 4);
    min-width: 200px;
  }

  .ai-product-carousel__image-wrapper-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    aspect-ratio: 1;
    margin-bottom: 12px;
    overflow: hidden;
    border-radius: 8px;}

  .ai-product-carousel__image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-product-carousel__image-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-product-carousel__image-placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
    opacity: 0.3;
  }

  .ai-product-carousel__badge-{{ ai_gen_id }} {
    position: absolute;
    top: 8px;
    left: 8px;
    background-color: {{ section.settings.sale_badge_color }};
    color: {{ section.settings.sale_badge_text_color }};
    padding: 4px 8px;
    font-size: {{ section.settings.sale_badge_size }}px;
    border-radius: 4px;
    font-weight: 600;
    z-index: 2;
  }

  .ai-product-carousel__title-{{ ai_gen_id }} {
    font-family: {{ section.settings.product_font.family }}, {{ section.settings.product_font.fallback_families }};
    font-weight: {{ section.settings.product_font.weight }};
    font-style: {{ section.settings.product_font.style }};
    font-size: {{ section.settings.product_title_size }}px;
    color: {{ section.settings.product_title_color }};
    margin: 00 8px 0;
    text-align: {{ section.settings.product_text_alignment }};
    line-height: 1.3;
  }

  .ai-product-carousel__title-link-{{ ai_gen_id }} {
    color: inherit;
    text-decoration: none;
  }

  .ai-product-carousel__title-link-{{ ai_gen_id }}:hover {
    text-decoration: underline;
  }

  .ai-product-carousel__price-{{ ai_gen_id }} {
    font-family: {{ section.settings.product_font.family }}, {{ section.settings.product_font.fallback_families }};
    font-weight: {{ section.settings.product_font.weight }};
    font-style: {{ section.settings.product_font.style }};
    font-size: {{ section.settings.product_price_size }}px;
    text-align: {{ section.settings.product_text_alignment }};
    display: flex;
    gap: 8px;
    {% if section.settings.product_text_alignment == 'center' %}
      justify-content: center;
    {% elsif section.settings.product_text_alignment == 'right' %}
      justify-content: flex-end;
    {% else %}
      justify-content: flex-start;
    {% endif %}}

  .ai-product-carousel__price-regular-{{ ai_gen_id }} {
    color: {{ section.settings.product_price_color }};
  }

  .ai-product-carousel__price-compare-{{ ai_gen_id }} {
    color: {{ section.settings.product_price_color }};
    text-decoration: line-through;
  }

  .ai-product-carousel__price-sale-{{ ai_gen_id }} {
    color: {{ section.settings.product_sale_price_color }};
  }

  .ai-product-carousel__pagination-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    gap: 8px;
    margin-top: 24px;
  }

  .ai-product-carousel__dot-{{ ai_gen_id }} {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: #ccc;
    transition: background-color 0.3s ease;
  }

  .ai-product-carousel__dot-{{ ai_gen_id }}.active {
    background-color: #333;
  }

  .ai-product-carousel__empty-state-{{ ai_gen_id }} {
    text-align: center;
    padding: 40px20px;
    color: #666;
    font-style: italic;
  }

  @media screen and (max-width: 990px) {
    .ai-product-carousel__card-{{ ai_gen_id }} {
      flex: 0 0 calc((100% - ({{ section.settings.card_spacing }}px * 1)) / 2.5);
      min-width: 150px;
    }
  }

  @media screen and (max-width: 749px) {
    .ai-product-carousel__container-{{ ai_gen_id }} {
      padding: 0 15px;
    }

    .ai-product-carousel__heading-{{ ai_gen_id }} {
      margin-bottom: 24px;
    }

    .ai-product-carousel__card-{{ ai_gen_id }} {
      flex: 0 0 calc((100% - ({{ section.settings.card_spacing }}px * 1)) / 2.3);
      min-width: 140px;
    }
  }
{% endstyle %}

<product-carousel-{{ ai_gen_id }} class="ai-product-carousel-{{ ai_gen_id }}" {{ section.shopify_attributes }}>
  <div class="ai-product-carousel__container-{{ ai_gen_id }}">
    {% if section.settings.heading != blank %}
      <h2 class="ai-product-carousel__heading-{{ ai_gen_id }}">{{ section.settings.heading }}</h2>
    {% endif %}<div class="ai-product-carousel__wrapper-{{ ai_gen_id }}">
      {% liquid
        assign products_to_show = blank
        if section.settings.selected_products != blank and section.settings.selected_products.size > 0
          assign products_to_show = section.settings.selected_products
        elsif section.settings.collection != blank and section.settings.collection.products.size > 0
          assign products_to_show = section.settings.collection.products
        endif
      %}

      {% if products_to_show != blank and products_to_show.size > 0 %}
        <div class="ai-product-carousel__track-{{ ai_gen_id }}" data-carousel-track>
          {% for product in products_to_show limit: 20 %}
            <div class="ai-product-carousel__card-{{ ai_gen_id }}">
              <div class="ai-product-carousel__image-wrapper-{{ ai_gen_id }}">
                {% if product.featured_image %}
                  <img
                    src="{{ product.featured_image | image_url: width: 400}}"
                    alt="{{ product.featured_image.alt | escape }}"
                    class="ai-product-carousel__image-{{ ai_gen_id }}"loading="lazy"
                    width="400"
                    height="400"
                  >
                {% else %}
                  <div class="ai-product-carousel__image-placeholder-{{ ai_gen_id }}">
                    {{ 'product-1' | placeholder_svg_tag }}
                  </div>
                {% endif %}

                {% if product.compare_at_price > product.price %}
                  <div class="ai-product-carousel__badge-{{ ai_gen_id }}">
                    {{ section.settings.sale_badge_text }}
                  </div>
                {% endif %}
              </div>

              <h3 class="ai-product-carousel__title-{{ ai_gen_id }}">
                <a href="{{ product.url }}" class="ai-product-carousel__title-link-{{ ai_gen_id }}">
                  {{ product.title }}
                </a>
              </h3>

              <div class="ai-product-carousel__price-{{ ai_gen_id }}">
                {% if product.compare_at_price > product.price %}
                  <span class="ai-product-carousel__price-compare-{{ ai_gen_id }}">
                    {{ product.compare_at_price | money }}
                  </span>
                <span class="ai-product-carousel__price-sale-{{ ai_gen_id }}">
                    {{ product.price | money }}
                  </span>
                {% else %}
                  <span class="ai-product-carousel__price-regular-{{ ai_gen_id }}">
                    {{ product.price | money }}
                  </span>
                {% endif %}
              </div>
            </div>
          {% endfor %}
        </div><div class="ai-product-carousel__pagination-{{ ai_gen_id }}" data-pagination></div>
      {% else %}
        <div class="ai-product-carousel__empty-state-{{ ai_gen_id }}">
          <p>Select a collection or choose individual products to display in this carousel.</p>
        </div>
      {% endif %}
    </div>
  </div>
</product-carousel-{{ ai_gen_id }}>

<script>
  (function() {
    class ProductCarousel{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
      }

      connectedCallback() {
        this.track = this.querySelector('[data-carousel-track]');
        this.pagination = this.querySelector('[data-pagination]');
        
        if (!this.track || !this.pagination) return;
        
        this.cards = this.querySelectorAll('.ai-product-carousel__card-{{ ai_gen_id }}');
        
        if (this.cards.length === 0) return;
        
        this.currentPage = 0;
        this.itemsPerPage = this.getItemsPerPage();
        this.totalPages = Math.ceil(this.cards.length / this.itemsPerPage);
        
        this.createPagination();
        this.setupEventListeners();
        this.updatePagination();
      }

      getItemsPerPage() {
        if (window.innerWidth <= 749) {
          return 2;
        } else if (window.innerWidth <= 990) {
          return 3;
        }
        return 4;
      }

      createPagination() {
        this.pagination.innerHTML = '';
        for (let i = 0; i < this.totalPages; i++) {
          const dot = document.createElement('div');
          dot.className = 'ai-product-carousel__dot-{{ ai_gen_id }}';
          dot.addEventListener('click', () => this.goToPage(i));
          this.pagination.appendChild(dot);
        }
      }

      setupEventListeners() {
        this.track.addEventListener('scroll', () => {
          this.updateCurrentPage();
          this.updatePagination();
        });

        window.addEventListener('resize', () => {
          const newItemsPerPage = this.getItemsPerPage();
          if (newItemsPerPage !== this.itemsPerPage) {
            this.itemsPerPage = newItemsPerPage;
            this.totalPages = Math.ceil(this.cards.length / this.itemsPerPage);
            this.createPagination();
            this.updatePagination();
          }
        });
      }

      updateCurrentPage() {
        const scrollLeft = this.track.scrollLeft;
        const cardWidth = this.cards[0].offsetWidth;
        const gap = parseInt(getComputedStyle(this.track).gap);
        const itemWidth = cardWidth + gap;
        this.currentPage = Math.round(scrollLeft / (itemWidth * this.itemsPerPage));
      }

      updatePagination() {
        const dots = this.pagination.querySelectorAll('.ai-product-carousel__dot-{{ ai_gen_id }}');
        dots.forEach((dot, index) => {
          dot.classList.toggle('active', index === this.currentPage);
        });
      }

      goToPage(pageIndex) {
        const cardWidth = this.cards[0].offsetWidth;
        const gap = parseInt(getComputedStyle(this.track).gap);
        const itemWidth = cardWidth + gap;
        const scrollPosition = pageIndex * (itemWidth * this.itemsPerPage);
        
        this.track.scrollTo({
          left: scrollPosition,
          behavior: 'smooth'
        });
        
        this.currentPage = pageIndex;
        this.updatePagination();
      }
    }

    customElements.define('product-carousel-{{ ai_gen_id }}', ProductCarousel{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Product carousel",
  "tag": "section",
  "settings": [
    {
      "type": "header",
      "content": "Heading"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "TRENDING PIECES"
    },
    {
      "type": "font_picker",
      "id": "heading_font",
      "label": "Heading font",
      "default": "bebas_neue_n4"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 16,
      "max": 60,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 32
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading color",
      "default": "#000000"
    },
    {
      "type": "select",
      "id": "heading_alignment",
      "label": "Heading alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "header",
      "content": "Products"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection"
    },
    {
      "type": "product_list",
      "id": "selected_products",
      "label": "Selected products",
      "limit": 20
    },
    {
      "type": "range",
      "id": "card_spacing",
      "min": 8,
      "max": 40,
      "step": 4,
      "unit": "px",
      "label": "Card spacing",
      "default": 16
    },
    {
      "type": "header",
      "content": "Product text"
    },
    {
      "type": "font_picker",
      "id": "product_font",
      "label": "Product font",
      "default": "poppins_n4"
    },
    {
      "type": "range",
      "id": "product_title_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Title size",
      "default": 16
    },
    {
      "type": "range",
      "id": "product_price_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Price size",
      "default": 14
    },
    {
      "type": "select",
      "id": "product_text_alignment",
      "label": "Text alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "left"
    },
    {
      "type": "color",
      "id": "product_title_color",
      "label": "Title color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "product_price_color",
      "label": "Price color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "product_sale_price_color",
      "label": "Sale price color",
      "default": "#ff0000"
    },
    {
      "type": "header",
      "content": "Sale badge"
    },
    {
      "type": "text",
      "id": "sale_badge_text",
      "label": "Sale badge text",
      "default": "ON SALE"
    },
    {
      "type": "range",
      "id": "sale_badge_size",
      "min": 8,
      "max": 16,
      "step": 1,
      "unit": "px",
      "label": "Badge size",
      "default": 10
    },
    {
      "type": "color",
      "id": "sale_badge_color",
      "label": "Badge background",
      "default": "#ff0000"
    },
    {
      "type": "color",
      "id": "sale_badge_text_color",
      "label": "Badge text color",
      "default": "#ffffff"
    }
  ],
  "presets": [
    {
      "name": "Product carousel"
    }
  ]
}
{% endschema %}