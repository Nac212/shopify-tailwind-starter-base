{% doc %}
  @prompt
    Create a scrollable product carousel section for a Shopify page.
    
    The section should have a customizable heading (e.g., "TRENDING PIECES") with a customizable font and color. The heading font must default to 'Bebas Neue'.
    
    The carousel should display a maximum of four product cards at a time on desktop and be fully scrollable on all devices. Include a dot or line-based pagination system below the product cards to indicate progress through the carousel. This scrolling widget visual must be present on both desktop and mobile views.
    
    The product cards should have a customizable amount of white space between them. Each card should display the product image, title, and price. The product title and price fonts must default to 'Poppins'. The regular price should default to black. If there is a sale price, the regular price must be crossed out and displayed on the left side, with the sale price on the right side in red. A small, customizable "ON SALE" badge should be displayed on the product image.
    
    The section should include settings for a store owner to:
    
    Choose a specific collection to pull products from.
    
    Alternatively, manually select individual products to display. Ensure this functionality is fully working and reliable.
    
    Customize the font, size, and centering of the section heading.
    
    Customize the font, size, and centering of the product titles and prices.
    
    Customize the amount of white space between the product cards.
    
    Ensure the section is fully responsive. On mobile, the layout must display two full columns with a third column partially visible on the right, indicating to the user that they can scroll to see more products. The functionality and visual appearance must be consistent across all devices.

{% enddoc %}
{% assign ai_gen_id = section.id | replace: '_', '' | downcase %}

{% style %}
  .ai-product-carousel-{{ ai_gen_id }} {
    padding: 40px 20px;
    max-width: 1200px;
    margin: 0 auto;
  }

  .ai-product-carousel-heading-{{ ai_gen_id }} {
    font-family: {{ section.settings.heading_font.family }}, {{ section.settings.heading_font.fallback_families }};
    font-weight: {{ section.settings.heading_font.weight }};
    font-size: {{ section.settings.heading_size }}px;
    color: {{ section.settings.heading_color }};
    margin: 0 0 30px 0;
    {% if section.settings.heading_center %}
      text-align: center;
    {% else %}
      text-align: left;
    {% endif %}
  }

  .ai-product-carousel-container-{{ ai_gen_id }} {
    position: relative;
    overflow: hidden;
  }

  .ai-product-carousel-track-{{ ai_gen_id }} {
    display: flex;
    gap: {{ section.settings.card_spacing }}px;
    overflow-x: auto;
    scroll-behavior: smooth;
    scrollbar-width: none;
    -ms-overflow-style: none;
    padding-bottom: 10px;
  }

  .ai-product-carousel-track-{{ ai_gen_id }}::-webkit-scrollbar {
    display: none;
  }

  .ai-product-card-{{ ai_gen_id }} {
    flex: 0 0 calc((100% - {{ section.settings.card_spacing | times: 3 }}px) / 4);
    min-width: 0;
    background: white;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;
  }

  .ai-product-card-{{ ai_gen_id }}:hover {
    transform: translateY(-4px);
  }

  .ai-product-card-image-wrapper-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    aspect-ratio: 1;
    overflow: hidden;
  }

  .ai-product-card-image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-product-card-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-product-card-placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
    opacity: 0.3;
  }

  .ai-product-card-badge-{{ ai_gen_id }} {
    position: absolute;
    top: 10px;
    left: 10px;
    background-color: {{ section.settings.sale_badge_color }};
    color: white;
    padding: 4px 8px;
    font-size: 12px;
    font-weight: bold;
    border-radius: 4px;
    z-index: 2;
  }

  .ai-product-card-content-{{ ai_gen_id }} {
    padding: 15px;
  }

  .ai-product-card-title-{{ ai_gen_id }} {
    font-family: {{ section.settings.product_font.family }}, {{ section.settings.product_font.fallback_families }};
    font-weight: {{ section.settings.product_font.weight }};
    font-size: {{ section.settings.product_title_size }}px;
    color: {{ section.settings.product_title_color }};
    margin: 0 0 8px 0;
    line-height: 1.3;
    {% if section.settings.product_text_center %}
      text-align: center;
    {% else %}
      text-align: left;
    {% endif %}
  }

  .ai-product-card-title-{{ ai_gen_id }} a {
    color: inherit;
    text-decoration: none;
  }

  .ai-product-card-title-{{ ai_gen_id }} a:hover {
    text-decoration: underline;
  }

  .ai-product-card-price-{{ ai_gen_id }} {
    font-family: {{ section.settings.product_font.family }}, {{ section.settings.product_font.fallback_families }};
    font-weight: {{ section.settings.product_font.weight }};
    font-size: {{ section.settings.product_price_size }}px;
    {% if section.settings.product_text_center %}
      text-align: center;
    {% else %}
      text-align: left;
    {% endif %}
  }

  .ai-product-card-price-wrapper-{{ ai_gen_id }} {
    display: flex;
    gap: 8px;
    {% if section.settings.product_text_center %}
      justify-content: center;
    {% else %}
      justify-content: flex-start;
    {% endif %}align-items: center;
  }

  .ai-product-card-price-regular-{{ ai_gen_id }} {
    color: #000000;
  }

  .ai-product-card-price-sale-{{ ai_gen_id }} {
    color: #ff0000;
  }

  .ai-product-card-price-compare-{{ ai_gen_id }} {
    color: #666666;
    text-decoration: line-through;
  }

  .ai-product-carousel-pagination-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    gap: 8px;
    margin-top: 20px;
  }

  .ai-product-carousel-dot-{{ ai_gen_id }} {
    width: 30px;
    height: 4px;
    background-color: #e0e0e0;
    border-radius: 2px;
    transition: background-color 0.3s ease;
    cursor: pointer;
  }

  .ai-product-carousel-dot-{{ ai_gen_id }}.active {
    background-color: #333333;
  }

  @media screen and (max-width: 990px) {
    .ai-product-card-{{ ai_gen_id }} {
      flex: 0 0 calc((100% - {{ section.settings.card_spacing | times: 2 }}px) / 3);
    }
  }

  @media screen and (max-width: 749px) {
    .ai-product-carousel-{{ ai_gen_id }} {
      padding: 30px 15px;
    }

    .ai-product-card-{{ ai_gen_id }} {
      flex: 0 0 calc((100% - {{ section.settings.card_spacing }}px) / 2.3);
    }

    .ai-product-card-content-{{ ai_gen_id }} {
      padding: 12px;
    }

    .ai-product-card-title-{{ ai_gen_id }} {
      font-size: {{ section.settings.product_title_size | times: 0.9 }}px;
    }

    .ai-product-card-price-{{ ai_gen_id }} {
      font-size: {{ section.settings.product_price_size | times: 0.9 }}px;
    }
  }
{% endstyle %}

<product-carousel-{{ ai_gen_id }} class="ai-product-carousel-{{ ai_gen_id }}" {{ section.shopify_attributes }}>
  {% if section.settings.heading != blank %}
    <h2 class="ai-product-carousel-heading-{{ ai_gen_id }}">{{ section.settings.heading }}</h2>
  {% endif %}

  <div class="ai-product-carousel-container-{{ ai_gen_id }}">
    <div class="ai-product-carousel-track-{{ ai_gen_id }}" data-carousel-track>
      {% liquid
        assign products_to_show = section.settings.selected_products
        if section.settings.collection != blank and products_to_show.size == 0
          assign products_to_show = section.settings.collection.products
        endif
        
        if products_to_show.size == 0
          assign products_to_show = collections.all.products | limit: 8
        endif
      %}

      {% for product in products_to_show limit: 20 %}
        <div class="ai-product-card-{{ ai_gen_id }}">
          <div class="ai-product-card-image-wrapper-{{ ai_gen_id }}">
            {% if product.featured_image %}
              <img
                src="{{ product.featured_image | image_url: width: 400 }}"
                alt="{{ product.featured_image.alt | escape }}"
                class="ai-product-card-image-{{ ai_gen_id }}"
                loading="lazy"
                width="400"
                height="400"
              >
            {% else %}
              <div class="ai-product-card-placeholder-{{ ai_gen_id }}">
                {{ 'product-1' | placeholder_svg_tag }}
              </div>
            {% endif %}

            {% if product.compare_at_price > product.price %}
              <div class="ai-product-card-badge-{{ ai_gen_id }}">
                {{ section.settings.sale_badge_text }}
              </div>
            {% endif %}
          </div>

          <div class="ai-product-card-content-{{ ai_gen_id }}">
            <h3 class="ai-product-card-title-{{ ai_gen_id }}">
              <a href="{{ product.url }}">{{ product.title }}</a>
            </h3>

            <div class="ai-product-card-price-{{ ai_gen_id }}">
              {% if product.compare_at_price > product.price %}
                <div class="ai-product-card-price-wrapper-{{ ai_gen_id }}">
                  <span class="ai-product-card-price-compare-{{ ai_gen_id }}">
                    {{ product.compare_at_price | money }}
                  </span>
                  <span class="ai-product-card-price-sale-{{ ai_gen_id }}">
                    {{ product.price | money }}
                  </span>
                </div>
              {% else %}
                <div class="ai-product-card-price-regular-{{ ai_gen_id }}">
                  {{ product.price | money }}
                </div>
              {% endif %}
            </div>
          </div>
        </div>
      {% endfor %}
    </div>

    <div class="ai-product-carousel-pagination-{{ ai_gen_id }}" data-pagination></div>
  </div>
</product-carousel-{{ ai_gen_id }}>

<script>
  (function() {
    class ProductCarousel{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.track = this.querySelector('[data-carousel-track]');
        this.pagination = this.querySelector('[data-pagination]');
        this.cards = this.querySelectorAll('.ai-product-card-{{ ai_gen_id }}');
        this.currentPage = 0;
        this.itemsPerPage = this.getItemsPerPage();
        this.totalPages = Math.ceil(this.cards.length / this.itemsPerPage);}

      connectedCallback() {
        this.setupPagination();
        this.setupScrollListener();
        this.updatePagination();
        
        window.addEventListener('resize', () => {
          this.itemsPerPage = this.getItemsPerPage();
          this.totalPages = Math.ceil(this.cards.length / this.itemsPerPage);
          this.setupPagination();
          this.updatePagination();
        });
      }

      getItemsPerPage() {
        const width = window.innerWidth;
        if (width <= 749) return 2.3;
        if (width <= 990) return 3;
        return 4;
      }

      setupPagination() {
        this.pagination.innerHTML = '';
        
        for (let i = 0; i < this.totalPages; i++) {
          const dot = document.createElement('div');
          dot.className = 'ai-product-carousel-dot-{{ ai_gen_id }}';
          dot.addEventListener('click', () => this.goToPage(i));
          this.pagination.appendChild(dot);
        }
      }

      setupScrollListener() {
        this.track.addEventListener('scroll', () => {
          this.updateCurrentPage();
          this.updatePagination();
        });
      }

      updateCurrentPage() {
        const scrollLeft = this.track.scrollLeft;
        const cardWidth = this.cards[0].offsetWidth;
        const gap = parseInt(getComputedStyle(this.track).gap);
        const itemWidth = cardWidth + gap;
        
        this.currentPage = Math.round(scrollLeft / (itemWidth * Math.floor(this.itemsPerPage)));
        this.currentPage = Math.min(this.currentPage, this.totalPages - 1);
      }

      updatePagination() {
        const dots = this.pagination.querySelectorAll('.ai-product-carousel-dot-{{ ai_gen_id }}');
        dots.forEach((dot, index) => {
          dot.classList.toggle('active', index === this.currentPage);
        });
      }

      goToPage(pageIndex) {
        const cardWidth = this.cards[0].offsetWidth;
        const gap = parseInt(getComputedStyle(this.track).gap);
        const itemWidth = cardWidth + gap;
        const scrollPosition = pageIndex * itemWidth * Math.floor(this.itemsPerPage);
        
        this.track.scrollTo({
          left: scrollPosition,
          behavior: 'smooth'
        });
        
        this.currentPage = pageIndex;
        this.updatePagination();
      }
    }

    customElements.define('product-carousel-{{ ai_gen_id }}', ProductCarousel{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Product carousel",
  "tag": "section",
  "settings": [
    {
      "type": "header",
      "content": "Heading"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "TRENDING PIECES"
    },
    {
      "type": "font_picker",
      "id": "heading_font",
      "label": "Heading font",
      "default": "bebas_neue_n4"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 20,
      "max": 60,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 36
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading color",
      "default": "#000000"
    },
    {
      "type": "checkbox",
      "id": "heading_center",
      "label": "Center heading",
      "default": true
    },
    {
      "type": "header",
      "content": "Products"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection"
    },
    {
      "type": "product_list",
      "id": "selected_products",
      "label": "Selected products",
      "limit": 20
    },
    {
      "type": "header",
      "content": "Product cards"
    },
    {
      "type": "range",
      "id": "card_spacing",
      "min": 10,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Card spacing",
      "default": 20
    },
    {
      "type": "font_picker",
      "id": "product_font",
      "label": "Product text font",
      "default": "poppins_n4"
    },
    {
      "type": "range",
      "id": "product_title_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Product title size",
      "default": 16
    },
    {
      "type": "range",
      "id": "product_price_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Product price size",
      "default": 14
    },
    {
      "type": "color",
      "id": "product_title_color",
      "label": "Product title color",
      "default": "#000000"
    },
    {
      "type": "checkbox",
      "id": "product_text_center",
      "label": "Center product text",
      "default": false
    },
    {
      "type": "header",
      "content": "Sale badge"
    },
    {
      "type": "text",
      "id": "sale_badge_text",
      "label": "Sale badge text",
      "default": "ON SALE"
    },
    {
      "type": "color",
      "id": "sale_badge_color",
      "label": "Sale badge color",
      "default": "#ff0000"
    }
  ],
  "presets": [
    {
      "name": "Product carousel"
    }
  ]
}
{% endschema %}